{"ast":null,"code":"import { AllDOGS, TEMPERAMENTO, FILTROINPUT, ORDERAZ, FILTROTEMPERAMENTO, COPYDOG } from \"./action-types\";\nimport axios from 'axios';\nexport const Alldogs = () => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/dogs';\n      const {\n        data\n      } = await axios.get(endpoint);\n      const priemrabusqueda = [];\n      let dato = data.api;\n      let dbdogs = data.bd;\n      //console.log(\"Datos de resultado: \" + JSON.stringify(dbdogs));\n      dato.forEach(breeds => {\n        // console.log(\"Esta cargando el breeds\"+ breeds.id);\n        let inf = breeds.breeds.map(elemento => ({\n          code: breeds.id,\n          id: elemento.id,\n          name: elemento.name,\n          country_code: elemento.country_code,\n          life_span: elemento.life_span,\n          temperament: elemento.temperament,\n          weight: elemento.weight.metric,\n          url: breeds.url\n        }));\n        priemrabusqueda.push(...inf);\n      });\n      if (dbdogs) {\n        let inf = dbdogs.map(elemento => ({\n          code: elemento.id,\n          id: elemento.id,\n          name: elemento.name,\n          country_code: elemento.country_code,\n          life_span: elemento.life_span,\n          temperament: elemento.temperament,\n          weight: elemento.weight,\n          url: elemento.url\n        }));\n        priemrabusqueda.push(...inf);\n      }\n      dispatch({\n        type: AllDOGS,\n        payload: priemrabusqueda\n      });\n    } catch (error) {\n      console.error(\"El dato de error es: \" + error);\n    }\n  };\n};\n_c = Alldogs;\nexport const AllTemperamento = () => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/temperament';\n      const {\n        data\n      } = await axios.get(endpoint);\n      const {\n        temperamentos\n      } = data;\n      //  const priemrabusqueda = []\n      console.log(\"Este es el temperamento \" + JSON.stringify(data));\n      dispatch({\n        type: TEMPERAMENTO,\n        payload: temperamentos\n      });\n    } catch (error) {\n      console.error(\"El dato de error es: \" + error);\n    }\n  };\n};\n_c2 = AllTemperamento;\nexport const FiltroInput = dato => {\n  return async dispatch => {\n    dispatch({\n      type: FILTROINPUT,\n      payload: dato\n    });\n  };\n};\n_c3 = FiltroInput;\nexport const OrderAZ = dato => {\n  return async dispatch => {\n    dispatch({\n      type: ORDERAZ,\n      payload: dato\n    });\n  };\n};\n_c4 = OrderAZ;\nexport const FiltertTemperamento = dato => {\n  return async dispatch => {\n    dispatch({\n      type: FILTROTEMPERAMENTO,\n      payload: dato\n    });\n  };\n};\n_c5 = FiltertTemperamento;\nexport const Copydog = () => {\n  return async dispatch => {\n    dispatch({\n      type: COPYDOG,\n      payload: ''\n    });\n  };\n};\n_c6 = Copydog;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Alldogs\");\n$RefreshReg$(_c2, \"AllTemperamento\");\n$RefreshReg$(_c3, \"FiltroInput\");\n$RefreshReg$(_c4, \"OrderAZ\");\n$RefreshReg$(_c5, \"FiltertTemperamento\");\n$RefreshReg$(_c6, \"Copydog\");","map":{"version":3,"names":["AllDOGS","TEMPERAMENTO","FILTROINPUT","ORDERAZ","FILTROTEMPERAMENTO","COPYDOG","axios","Alldogs","dispatch","endpoint","data","get","priemrabusqueda","dato","api","dbdogs","bd","forEach","breeds","inf","map","elemento","code","id","name","country_code","life_span","temperament","weight","metric","url","push","type","payload","error","console","_c","AllTemperamento","temperamentos","log","JSON","stringify","_c2","FiltroInput","_c3","OrderAZ","_c4","FiltertTemperamento","_c5","Copydog","_c6","$RefreshReg$"],"sources":["C:/Users/Luis Buelvas/Desktop/PI-Dogs-main/client/src/Redux/actions.js"],"sourcesContent":["import { AllDOGS, TEMPERAMENTO, FILTROINPUT, ORDERAZ, FILTROTEMPERAMENTO, COPYDOG } from \"./action-types\"\r\nimport axios from 'axios'\r\n\r\nexport const Alldogs =  ()=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            const endpoint = 'http://localhost:3001/dogs'\r\n            const {data} = await axios.get(endpoint)\r\n            const priemrabusqueda = []\r\n\r\n            let dato=data.api\r\n            let dbdogs = data.bd\r\n             //console.log(\"Datos de resultado: \" + JSON.stringify(dbdogs));\r\n            dato.forEach(breeds => {\r\n             // console.log(\"Esta cargando el breeds\"+ breeds.id);\r\n              let inf=breeds.breeds.map(elemento=>({\r\n                code: breeds.id,\r\n                id:elemento.id,\r\n                name: elemento.name,\r\n                country_code: elemento.country_code,\r\n                life_span: elemento.life_span,\r\n                temperament: elemento.temperament,\r\n                weight: elemento.weight.metric,\r\n                url: breeds.url\r\n                }))\r\n              priemrabusqueda.push(...inf)\r\n\r\n        });\r\n\r\n\r\n       \r\n            if(dbdogs){\r\n             let inf=dbdogs.map(elemento=>({\r\n               code: elemento.id,\r\n               id:elemento.id,\r\n               name: elemento.name,\r\n               country_code: elemento.country_code,\r\n               life_span: elemento.life_span,\r\n               temperament: elemento.temperament,\r\n               weight: elemento.weight,\r\n               url: elemento.url\r\n               }))\r\n             priemrabusqueda.push(...inf)\r\n\r\n            }\r\n\r\n                dispatch({\r\n                    type: AllDOGS,\r\n                    payload: priemrabusqueda,\r\n                })\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"El dato de error es: \"+error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const AllTemperamento = ()=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            const endpoint = 'http://localhost:3001/temperament'\r\n            const {data} = await axios.get(endpoint)\r\n            const {temperamentos} =  data\r\n          //  const priemrabusqueda = []\r\n            console.log(\"Este es el temperamento \"+JSON.stringify(data))\r\n\r\n            dispatch({\r\n                type: TEMPERAMENTO,\r\n                payload: temperamentos,\r\n            })\r\n        } catch (error) {\r\n            console.error(\"El dato de error es: \"+error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const FiltroInput = (dato)=>{\r\n    return async (dispatch) =>{\r\n        dispatch({\r\n        type: FILTROINPUT,\r\n        payload: dato,\r\n    })\r\n}\r\n}\r\n\r\nexport const OrderAZ = (dato)=>{\r\n    return async (dispatch) =>{\r\n        dispatch({\r\n        type: ORDERAZ,\r\n        payload: dato,\r\n    })\r\n}\r\n}\r\n\r\nexport const FiltertTemperamento = (dato)=>{\r\n    return async (dispatch) =>{\r\n        dispatch({\r\n        type: FILTROTEMPERAMENTO,\r\n        payload: dato,\r\n    })\r\n}\r\n}\r\nexport const Copydog = () =>{\r\n    return async (dispatch) =>{\r\n        dispatch({\r\n        type: COPYDOG,\r\n        payload: '',\r\n    })\r\n}\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
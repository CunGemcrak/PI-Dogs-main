{"ast":null,"code":"const validation = userData => {\n  const errors = {};\n  const urlPattern = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n  const imageExtensions = /\\.(jpe?g|png|gif|bmp|webp)$/i;\n\n  // Verificar si el nombre está vacío\n\n  if (!userData || typeof userData !== 'object') {\n    return errors; // Retorna un objeto de errores vacío si userData no está definido o no es un objeto\n  }\n  if (userData.name && userData.name.trim().length === 0) {\n    errors.name = 'El nombre no debe estar vacío';\n  }\n  if (userData.name && (userData.name.trim().length < 4 || userData.name.trim().length > 40)) {\n    errors.name = 'El nombre debe tener entre 4 y 40 caracteres';\n  }\n  if (userData.bred_for && userData.bred_for.trim().length === 0) {\n    errors.bred_for = 'El nombre no debe estar vacío';\n  }\n  if (userData.bred_for && (userData.bred_for.trim().length < 4 || userData.bred_for.trim().length > 120)) {\n    errors.bred_for = 'El bred for debe tener entre 4 y 100 caracteres';\n  }\n  if (userData.Temperament && userData.Temperament.trim().length === 0) {\n    errors.Temperament = 'El Temperament no debe estar vacío';\n  }\n  if (userData.Temperament && (userData.Temperament.trim().length < 4 || userData.Temperament.trim().length > 30)) {\n    errors.Temperament = 'El Temperament debe tener entre 4  y 30 caracteres';\n  }\n\n  /*\r\n      if(!/^\\d{4}\\/\\d{2}\\/\\d{2}$/.test(userData.release_date)){\r\n          errors.release_date = 'La fecha debe tener el formato AAAA/MM/DD';\r\n      } else\r\n  \r\n  \r\n      if(!userData.rating && userData.rating.trim().length === 0){\r\n          errors.rating = 'El rating no deben estar Vacios';\r\n      }else\r\n      if(!/^\\d+$/.test(userData.rating)){\r\n          errors.rating = 'Debe ser un número';\r\n      }else\r\n      if(!userData.platforms && userData.platforms.trim().length === 0){\r\n          errors.platforms = 'El rating no deben estar Vacios';\r\n      }else\r\n      \r\n      if(!userData.genres && userData.genres.trim().length === 0){\r\n          errors.genres = 'La imagen no deben estar Vacios';\r\n      }else\r\n      if(!userData.image && userData.image.trim().length === 0){\r\n          errors.image = 'La imagen no deben estar Vacios';\r\n      }else\r\n      */\n  if (!urlPattern.test(userData.image)) {\n    errors.image = 'Por favor, ingrese una URL válida para la imagen';\n  } else if (!userData.image && userData.image.trim().length === 0) {\n    errors.image = 'La imagen no deben estar Vacios';\n  } else if (userData.image && userData.image.trim().length > 254) {\n    errors.Temperament = 'URL de Imagen muy larga';\n  } else if (!imageExtensions.test(userData.image)) {\n    errors.image = 'La URL debe terminar en una extensión de imagen válida (.jpg, .jpeg, .png, .gif, .bmp, .webp)';\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","urlPattern","imageExtensions","name","trim","length","bred_for","Temperament","test","image"],"sources":["C:/Users/Luis Buelvas/Desktop/Carpeta_PI/PI-Dogs-main/client/src/Components/Validation/validation.js"],"sourcesContent":["const validation = (userData)=>{\r\n    \r\nconst errors ={};\r\nconst urlPattern = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\nconst imageExtensions = /\\.(jpe?g|png|gif|bmp|webp)$/i;\r\n\r\n// Verificar si el nombre está vacío\r\n\r\nif (!userData || typeof userData !== 'object') {\r\n    return errors; // Retorna un objeto de errores vacío si userData no está definido o no es un objeto\r\n}\r\n\r\nif (userData.name && userData.name.trim().length === 0) {\r\n    errors.name = 'El nombre no debe estar vacío';\r\n}\r\n\r\nif (userData.name && (userData.name.trim().length < 4 || userData.name.trim().length > 40)) {\r\n    errors.name = 'El nombre debe tener entre 4 y 40 caracteres';\r\n}\r\n\r\nif (userData.bred_for && userData.bred_for.trim().length === 0) {\r\n    errors.bred_for = 'El nombre no debe estar vacío';\r\n}\r\n\r\nif (userData.bred_for && (userData.bred_for.trim().length < 4 || userData.bred_for.trim().length > 120)) {\r\n    errors.bred_for = 'El bred for debe tener entre 4 y 100 caracteres';\r\n}\r\n\r\n\r\nif (userData.Temperament && userData.Temperament.trim().length === 0) {\r\n    errors.Temperament = 'El Temperament no debe estar vacío';\r\n}\r\n\r\nif (userData.Temperament && (userData.Temperament.trim().length < 4 || userData.Temperament.trim().length > 30)) {\r\n    errors.Temperament = 'El Temperament debe tener entre 4  y 30 caracteres';\r\n}\r\n\r\n\r\n/*\r\n    if(!/^\\d{4}\\/\\d{2}\\/\\d{2}$/.test(userData.release_date)){\r\n        errors.release_date = 'La fecha debe tener el formato AAAA/MM/DD';\r\n    } else\r\n\r\n\r\n    if(!userData.rating && userData.rating.trim().length === 0){\r\n        errors.rating = 'El rating no deben estar Vacios';\r\n    }else\r\n    if(!/^\\d+$/.test(userData.rating)){\r\n        errors.rating = 'Debe ser un número';\r\n    }else\r\n    if(!userData.platforms && userData.platforms.trim().length === 0){\r\n        errors.platforms = 'El rating no deben estar Vacios';\r\n    }else\r\n    \r\n    if(!userData.genres && userData.genres.trim().length === 0){\r\n        errors.genres = 'La imagen no deben estar Vacios';\r\n    }else\r\n    if(!userData.image && userData.image.trim().length === 0){\r\n        errors.image = 'La imagen no deben estar Vacios';\r\n    }else\r\n    */\r\n    if(!urlPattern.test(userData.image)){\r\n        errors.image = 'Por favor, ingrese una URL válida para la imagen';\r\n    }else\r\n    if(!userData.image && userData.image.trim().length === 0){\r\n        errors.image = 'La imagen no deben estar Vacios';\r\n    }else\r\n    if (userData.image && (userData.image.trim().length >254)) {\r\n        errors.Temperament = 'URL de Imagen muy larga';\r\n    } else if (!imageExtensions.test(userData.image)) {\r\n        errors.image = 'La URL debe terminar en una extensión de imagen válida (.jpg, .jpeg, .png, .gif, .bmp, .webp)';\r\n    }\r\n    \r\n\r\nreturn errors;\r\n\r\n}\r\n\r\nexport default validation"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,QAAQ,IAAG;EAE/B,MAAMC,MAAM,GAAE,CAAC,CAAC;EAChB,MAAMC,UAAU,GAAG,+BAA+B;EAClD,MAAMC,eAAe,GAAG,8BAA8B;;EAEtD;;EAEA,IAAI,CAACH,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAC3C,OAAOC,MAAM,CAAC,CAAC;EACnB;EAEA,IAAID,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IACpDL,MAAM,CAACG,IAAI,GAAG,+BAA+B;EACjD;EAEA,IAAIJ,QAAQ,CAACI,IAAI,KAAKJ,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAIN,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,EAAE,CAAC,EAAE;IACxFL,MAAM,CAACG,IAAI,GAAG,8CAA8C;EAChE;EAEA,IAAIJ,QAAQ,CAACO,QAAQ,IAAIP,QAAQ,CAACO,QAAQ,CAACF,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAC5DL,MAAM,CAACM,QAAQ,GAAG,+BAA+B;EACrD;EAEA,IAAIP,QAAQ,CAACO,QAAQ,KAAKP,QAAQ,CAACO,QAAQ,CAACF,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAIN,QAAQ,CAACO,QAAQ,CAACF,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,GAAG,CAAC,EAAE;IACrGL,MAAM,CAACM,QAAQ,GAAG,iDAAiD;EACvE;EAGA,IAAIP,QAAQ,CAACQ,WAAW,IAAIR,QAAQ,CAACQ,WAAW,CAACH,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAClEL,MAAM,CAACO,WAAW,GAAG,oCAAoC;EAC7D;EAEA,IAAIR,QAAQ,CAACQ,WAAW,KAAKR,QAAQ,CAACQ,WAAW,CAACH,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAIN,QAAQ,CAACQ,WAAW,CAACH,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,EAAE,CAAC,EAAE;IAC7GL,MAAM,CAACO,WAAW,GAAG,oDAAoD;EAC7E;;EAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAG,CAACN,UAAU,CAACO,IAAI,CAACT,QAAQ,CAACU,KAAK,CAAC,EAAC;IAChCT,MAAM,CAACS,KAAK,GAAG,kDAAkD;EACrE,CAAC,MACD,IAAG,CAACV,QAAQ,CAACU,KAAK,IAAIV,QAAQ,CAACU,KAAK,CAACL,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAC;IACrDL,MAAM,CAACS,KAAK,GAAG,iCAAiC;EACpD,CAAC,MACD,IAAIV,QAAQ,CAACU,KAAK,IAAKV,QAAQ,CAACU,KAAK,CAACL,IAAI,CAAC,CAAC,CAACC,MAAM,GAAE,GAAI,EAAE;IACvDL,MAAM,CAACO,WAAW,GAAG,yBAAyB;EAClD,CAAC,MAAM,IAAI,CAACL,eAAe,CAACM,IAAI,CAACT,QAAQ,CAACU,KAAK,CAAC,EAAE;IAC9CT,MAAM,CAACS,KAAK,GAAG,+FAA+F;EAClH;EAGJ,OAAOT,MAAM;AAEb,CAAC;AAED,eAAeF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}
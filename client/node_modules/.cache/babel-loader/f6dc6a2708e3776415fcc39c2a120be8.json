{"ast":null,"code":"import { AllDOGS } from \"./action-types\";\nimport axios from 'axios';\nexport const Alldogs = () => {\n  return async dispactch => {\n    try {\n      const endpoint = 'http://localhost:3001/dogs';\n      const {\n        data\n      } = await axios.get(endpoint);\n      let breeds = data.datos;\n      console.log(\"Datos de resultado: \" + JSON.stringify(breeds));\n      /*   breeds.map(element =>{\r\n             element.forEach(datos => {\r\n                 console.log(\"Este es el dato del usuario \"+ datos.name)\r\n             });\r\n            \r\n             \r\n         })*/\n      breeds.forEach(breed => {\n        console.log(\"Este es el nombre de la raza: \" + breed.name);\n      });\n    } catch (error) {\n      console.error(\"El dato de error es: \" + error);\n    }\n  };\n};\n_c = Alldogs;\nvar _c;\n$RefreshReg$(_c, \"Alldogs\");","map":{"version":3,"names":["AllDOGS","axios","Alldogs","dispactch","endpoint","data","get","breeds","datos","console","log","JSON","stringify","forEach","breed","name","error","_c","$RefreshReg$"],"sources":["C:/Users/Luis Buelvas/Desktop/PI-Dogs-main/client/src/Redux/actions.js"],"sourcesContent":["import { AllDOGS } from \"./action-types\"\r\nimport axios from 'axios'\r\n\r\nexport const Alldogs =  ()=>{\r\n    return async (dispactch)=>{\r\n        try {\r\n            const endpoint = 'http://localhost:3001/dogs'\r\n            const {data} = await axios.get(endpoint)\r\n            \r\n\r\n            let breeds=data.datos\r\n            console.log(\"Datos de resultado: \" + JSON.stringify(breeds));\r\n         /*   breeds.map(element =>{\r\n                element.forEach(datos => {\r\n                    console.log(\"Este es el dato del usuario \"+ datos.name)\r\n                });\r\n               \r\n                \r\n            })*/\r\n            breeds.forEach(breed => {\r\n                console.log(\"Este es el nombre de la raza: \" + breed.name);\r\n              });\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"El dato de error es: \"+error)\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAIA,CAAA,KAAI;EACxB,OAAO,MAAOC,SAAS,IAAG;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,4BAA4B;MAC7C,MAAM;QAACC;MAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,QAAQ,CAAC;MAGxC,IAAIG,MAAM,GAACF,IAAI,CAACG,KAAK;MACrBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGC,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,CAAC;MAC/D;AACT;AACA;AACA;AACA;AACA;AACA;MACYA,MAAM,CAACM,OAAO,CAACC,KAAK,IAAI;QACpBL,OAAO,CAACC,GAAG,CAAC,gCAAgC,GAAGI,KAAK,CAACC,IAAI,CAAC;MAC5D,CAAC,CAAC;IAGR,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,uBAAuB,GAACA,KAAK,CAAC;IAChD;EACJ,CAAC;AACL,CAAC;AAAAC,EAAA,GAzBYf,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}
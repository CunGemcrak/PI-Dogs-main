{"ast":null,"code":"import { AllDOGS, TEMPERAMENTO, FILTROINPUT } from \"./action-types\";\nimport axios from 'axios';\nexport const Alldogs = () => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/dogs';\n      const {\n        data\n      } = await axios.get(endpoint);\n      const priemrabusqueda = [];\n      let dato = data.datos;\n      // console.log(\"Datos de resultado: \" + JSON.stringify(dato));\n      dato.forEach(breeds => {\n        // console.log(\"Esta cargando el breeds\"+ breeds.id);\n        let inf = breeds.breeds.map(elemento => ({\n          code: breeds.id,\n          id: elemento.id,\n          name: elemento.name,\n          country_code: elemento.country_code,\n          life_span: elemento.life_span,\n          temperament: elemento.temperament,\n          url: breeds.url\n        }));\n        priemrabusqueda.push(...inf);\n      });\n      dispatch({\n        type: AllDOGS,\n        payload: priemrabusqueda\n      });\n    } catch (error) {\n      console.error(\"El dato de error es: \" + error);\n    }\n  };\n};\n_c = Alldogs;\nexport const AllTemperamento = () => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/temperament';\n      const {\n        data\n      } = await axios.get(endpoint);\n      const {\n        temperamentos\n      } = data;\n      //  const priemrabusqueda = []\n      console.log(\"Este es el temperamento \" + JSON.stringify(data));\n      dispatch({\n        type: TEMPERAMENTO,\n        payload: temperamentos\n      });\n    } catch (error) {\n      console.error(\"El dato de error es: \" + error);\n    }\n  };\n};\n_c2 = AllTemperamento;\nexport const FiltroInput = dato => {\n  return async dispatch => {\n    dispatch({\n      type: FILTROINPUT,\n      payload: dato\n    });\n  };\n};\n_c3 = FiltroInput;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Alldogs\");\n$RefreshReg$(_c2, \"AllTemperamento\");\n$RefreshReg$(_c3, \"FiltroInput\");","map":{"version":3,"names":["AllDOGS","TEMPERAMENTO","FILTROINPUT","axios","Alldogs","dispatch","endpoint","data","get","priemrabusqueda","dato","datos","forEach","breeds","inf","map","elemento","code","id","name","country_code","life_span","temperament","url","push","type","payload","error","console","_c","AllTemperamento","temperamentos","log","JSON","stringify","_c2","FiltroInput","_c3","$RefreshReg$"],"sources":["C:/Users/Luis Buelvas/Desktop/PI-Dogs-main/client/src/Redux/actions.js"],"sourcesContent":["import { AllDOGS, TEMPERAMENTO, FILTROINPUT } from \"./action-types\"\r\nimport axios from 'axios'\r\n\r\nexport const Alldogs =  ()=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            const endpoint = 'http://localhost:3001/dogs'\r\n            const {data} = await axios.get(endpoint)\r\n            const priemrabusqueda = []\r\n\r\n            let dato=data.datos\r\n          // console.log(\"Datos de resultado: \" + JSON.stringify(dato));\r\n            dato.forEach(breeds => {\r\n             // console.log(\"Esta cargando el breeds\"+ breeds.id);\r\n              let inf=breeds.breeds.map(elemento=>({\r\n                code: breeds.id,\r\n                id:elemento.id,\r\n                name: elemento.name,\r\n                country_code: elemento.country_code,\r\n                life_span: elemento.life_span,\r\n                temperament: elemento.temperament,\r\n                url: breeds.url\r\n\r\n              }))\r\n              priemrabusqueda.push(...inf)\r\n\r\n        });\r\n\r\n                dispatch({\r\n                    type: AllDOGS,\r\n                    payload: priemrabusqueda,\r\n                })\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"El dato de error es: \"+error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const AllTemperamento = ()=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            const endpoint = 'http://localhost:3001/temperament'\r\n            const {data} = await axios.get(endpoint)\r\n            const {temperamentos} =  data\r\n          //  const priemrabusqueda = []\r\n            console.log(\"Este es el temperamento \"+JSON.stringify(data))\r\n\r\n            dispatch({\r\n                type: TEMPERAMENTO,\r\n                payload: temperamentos,\r\n            })\r\n        } catch (error) {\r\n            console.error(\"El dato de error es: \"+error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const FiltroInput = (dato)=>{\r\n    return async (dispatch) =>{dispatch({\r\n        type: FILTROINPUT,\r\n        payload: dato,\r\n    })\r\n}\r\n\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,YAAY,EAAEC,WAAW,QAAQ,gBAAgB;AACnE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAIA,CAAA,KAAI;EACxB,OAAO,MAAOC,QAAQ,IAAG;IACrB,IAAI;MACA,MAAMC,QAAQ,GAAG,4BAA4B;MAC7C,MAAM;QAACC;MAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,QAAQ,CAAC;MACxC,MAAMG,eAAe,GAAG,EAAE;MAE1B,IAAIC,IAAI,GAACH,IAAI,CAACI,KAAK;MACrB;MACED,IAAI,CAACE,OAAO,CAACC,MAAM,IAAI;QACtB;QACC,IAAIC,GAAG,GAACD,MAAM,CAACA,MAAM,CAACE,GAAG,CAACC,QAAQ,KAAG;UACnCC,IAAI,EAAEJ,MAAM,CAACK,EAAE;UACfA,EAAE,EAACF,QAAQ,CAACE,EAAE;UACdC,IAAI,EAAEH,QAAQ,CAACG,IAAI;UACnBC,YAAY,EAAEJ,QAAQ,CAACI,YAAY;UACnCC,SAAS,EAAEL,QAAQ,CAACK,SAAS;UAC7BC,WAAW,EAAEN,QAAQ,CAACM,WAAW;UACjCC,GAAG,EAAEV,MAAM,CAACU;QAEd,CAAC,CAAC,CAAC;QACHd,eAAe,CAACe,IAAI,CAAC,GAAGV,GAAG,CAAC;MAElC,CAAC,CAAC;MAEMT,QAAQ,CAAC;QACLoB,IAAI,EAAEzB,OAAO;QACb0B,OAAO,EAAEjB;MACb,CAAC,CAAC;IAIV,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,GAACA,KAAK,CAAC;IAChD;EACJ,CAAC;AACL,CAAC;AAAAE,EAAA,GApCYzB,OAAO;AAsCpB,OAAO,MAAM0B,eAAe,GAAGA,CAAA,KAAI;EAC/B,OAAO,MAAOzB,QAAQ,IAAG;IACrB,IAAI;MACA,MAAMC,QAAQ,GAAG,mCAAmC;MACpD,MAAM;QAACC;MAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,QAAQ,CAAC;MACxC,MAAM;QAACyB;MAAa,CAAC,GAAIxB,IAAI;MAC/B;MACEqB,OAAO,CAACI,GAAG,CAAC,0BAA0B,GAACC,IAAI,CAACC,SAAS,CAAC3B,IAAI,CAAC,CAAC;MAE5DF,QAAQ,CAAC;QACLoB,IAAI,EAAExB,YAAY;QAClByB,OAAO,EAAEK;MACb,CAAC,CAAC;IACN,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,GAACA,KAAK,CAAC;IAChD;EACJ,CAAC;AACL,CAAC;AAAAQ,GAAA,GAjBYL,eAAe;AAoB5B,OAAO,MAAMM,WAAW,GAAI1B,IAAI,IAAG;EAC/B,OAAO,MAAOL,QAAQ,IAAI;IAACA,QAAQ,CAAC;MAChCoB,IAAI,EAAEvB,WAAW;MACjBwB,OAAO,EAAEhB;IACb,CAAC,CAAC;EACN,CAAC;AAED,CAAC;AAAA2B,GAAA,GAPYD,WAAW;AAAA,IAAAP,EAAA,EAAAM,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}